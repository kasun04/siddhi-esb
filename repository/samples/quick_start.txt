Overview
========

- inFlow    : Default request path
- outFlow   : Default response path
- sender    : HTTP Sender based on 'endpoint' uri
- responder : Sending message back to the client
- ptcontext : carrier


Quick Start Guide 
================= 

Direct Proxy/Pass-Through
=========================

define stream inFlow ( message string);
define stream outFlow ( message string);

from inFlow select message, 'http://localhost:9000/service/EchoService' as endpoint insert into sender;
from outFlow select message insert into responder;


Invocation : URL - http://127.0.0.1:7070/anyuri



Header Based Routing (HBR)
==========================

define stream inFlow ( ptcontext string);
define stream outFlow ( ptcontext string);
define stream hbrapi ( ptcontext string);

from hbrapi [siddhiESB:evalXPath('$http:ROUTING_LOCATION') == 'WSO2' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint insert into sender;
from outFlow select ptcontext insert into responder;


URL - http://127.0.0.1:7070/hbrapi


Content Based Routing (CBR)
===========================

define stream inFlow ( ptcontext string);
define stream outFlow ( ptcontext string);
define stream cbrapi ( ptcontext string);


from cbrapi [siddhiESB:evalXPath('//order[1]/symbol') == 'WSO2' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint insert into sender;
from outFlow select ptcontext insert into responder;



URL - http://127.0.0.1:7070/cbrapi



Transformations
==============

define stream inFlow ( ptcontext string);
define stream outFlow ( ptcontext string);
define stream transformapi ( ptcontext string);

from transformapi [siddhiESB:xsltTransform('/repository/resources/samples/transform.xslt') == 'true' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint insert into sender;
from outFlow select ptcontext insert into responder;



URL - http://127.0.0.1:7070/transformapi


Advanced Config
===============
===============


PT - Multiple Flows
====================

define stream inFlow ( ptcontext string);
define stream outFlow ( ptcontext string);
define stream cbrFlow ( ptcontext string);

from inFlow select ptcontext insert into cbrFlow;
from cbrFlow [siddhiESB:evalXPath('/getQuote/request/symbol') == 'kasun' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint insert into sender;
from outFlow select ptcontext insert into responder;






Response Flow CBR
-----------------

define stream inFlow ( ptcontext string);
define stream outFlow ( ptcontext string);
define stream cbrFlow ( ptcontext string);


from inFlow select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint insert into sender;
from outFlow select ptcontext insert into cbrFlow;
from cbrFlow [siddhiESB:evalXPath('/getQuote/request/symbol') == 'kasun' ] select ptcontext insert into responder;




Transformations - Multiple Flows
================================

Transform IN Flow


define stream inFlow ( ptcontext string );
define stream outFlow ( ptcontext string);
define stream transformFlow (ptcontext string);

from inFlow select ptcontext insert into transformFlow;
from transformFlow [siddhiESB:xsltTransform('/repository/resources/samples/transform.xslt') == 'true' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into responder;


Transform Out Flow

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream transformapi ( ptcontext string);

from inFlow select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into transformapi;
from transformapi [siddhiESB:xsltTransform('/repository/resources/samples/transform.xslt') == 'true' ] select ptcontext insert into responder;


HBR (HTTP Header based routing)
================================

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream cbrFlow ( ptcontext string, receivingFlow string);

from inFlow select ptcontext, receivingFlow insert into cbrFlow;

from hbrFlow [siddhiESB:evalXPath('$http:ROUTING_LOCATION') == 'WSO2' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from ctxFlow [siddhiESB:evalXPath('$ctx:FOO') == 'kasun' ] select ptcontext insert into responder;
from outFlow select ptcontext insert into responder;


