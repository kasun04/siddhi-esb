
Overview
========

- inFlow    : Default request path
- outFlow   : Default response path
- sender    : HTTP Sender based on 'endpoint' uri
- responder : Sending message back to the client
- ptcontext : carrier
- receivingFlow : Specific receiver for a given invocation



PT, CBR and Transform
=====================

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream cbrapi ( ptcontext string, receivingFlow string);
define stream tranformapi ( ptcontext string, receivingFlow string);

from inFlow select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into responder;

from cbrapi [siddhiESB:evalXPath('/message/payload/buyStocks/info/company/text()') == 'WSO2' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from tranformapi [siddhiESB:xsltTransform('/repository/resources/samples/transform.xslt') == 'true' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;



PT - Multiple Flows
====================

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream cbrFlow ( ptcontext string, receivingFlow string);

from inFlow select ptcontext, receivingFlow insert into cbrFlow;
from cbrFlow select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into responder;



CBR - Multiple Flows
=====================

Request Flow CBR
----------------

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream cbrFlow ( ptcontext string, receivingFlow string);

from inFlow select ptcontext, receivingFlow insert into cbrFlow;
from cbrFlow [siddhiESB:evalXPath('/getQuote/request/symbol') == 'kasun' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into responder;


Response Flow CBR
-----------------

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream cbrFlow ( ptcontext string, receivingFlow string);


from inFlow select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into cbrFlow;
from cbrFlow [siddhiESB:evalXPath('/getQuote/request/symbol') == 'kasun' ] select ptcontext insert into responder;




Transformations - Multiple Flows
================================

Transform IN Flow


define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream transformFlow ( ptcontext string, receivingFlow string);

from inFlow select ptcontext, receivingFlow insert into transformFlow;
from transformFlow [siddhiESB:xsltTransform('/repository/resources/samples/transform.xslt') == 'true' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into responder;


Transform Out Flow

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream transformapi ( ptcontext string);

from inFlow select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from outFlow select ptcontext insert into transformapi;
from transformapi [siddhiESB:xsltTransform('/repository/resources/samples/transform.xslt') == 'true' ] select ptcontext insert into responder;


HBR (HTTP Header based routing)
================================

define stream inFlow ( ptcontext string, receivingFlow string);
define stream outFlow ( ptcontext string, receivingFlow string);
define stream cbrFlow ( ptcontext string, receivingFlow string);

from inFlow select ptcontext, receivingFlow insert into cbrFlow;

from hbrFlow [siddhiESB:evalXPath('$http:ROUTING_LOCATION') == 'WSO2' ] select ptcontext, 'http://localhost:9000/service/EchoService' as endpoint, receivingFlow insert into sender;
from ctxFlow [siddhiESB:evalXPath('$ctx:FOO') == 'kasun' ] select ptcontext insert into responder;
from outFlow select ptcontext insert into responder;


